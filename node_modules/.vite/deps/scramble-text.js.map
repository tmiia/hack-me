{
  "version": 3,
  "sources": ["../../scramble-text/dist/ScrambleText.module.js"],
  "sourcesContent": ["/*!\n * ScrambleText\n * https://github.com/yomotsu/ScrambleText\n * (c) 2017 @yomotsu\n * Released under the MIT License.\n */\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ATTR_IDLING = 'data-scramble-text-idling';\nvar ATTR_RUNNING = 'data-scramble-text-running';\n\nvar ScrambleText = function () {\n\tfunction ScrambleText(el) {\n\t\tvar option = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\t_classCallCheck(this, ScrambleText);\n\n\t\tthis._startTime = 0;\n\t\tthis._elapsedTime = 0;\n\t\tthis._running = false;\n\t\tthis._idling = true;\n\t\tthis._position = 0;\n\t\tthis._contents = split(el.innerHTML);\n\t\tthis._anim = anim.bind(this);\n\n\t\tthis.el = el;\n\t\tthis.timeOffset = option.timeOffset || 50;\n\t\tthis.fps = option.fps || 60;\n\t\tthis.chars = option.chars || ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', '!', '#', '$', '%', '&', ':', ';', '?', '@', '[', ']', '^', '_', '{', '|', '}', '~'];\n\t\tthis.callback = typeof option.callback === 'function' ? option.callback : function () {};\n\t\tthis.play();\n\n\t\treturn this;\n\t}\n\n\tScrambleText.prototype.play = function play() {\n\n\t\tif (this._running) return this;\n\n\t\tthis._idling = true;\n\t\tthis._running = true;\n\t\tthis._position = 0;\n\t\tthis.el.setAttribute(ATTR_IDLING, '');\n\t\tthis.el.setAttribute(ATTR_RUNNING, '');\n\t\tthis._anim();\n\n\t\treturn this;\n\t};\n\n\tScrambleText.prototype.start = function start() {\n\n\t\tthis._idling = false;\n\t\tthis._startTime = Date.now();\n\t\tthis._elapsedTime = 0;\n\t\tthis._position = 0;\n\t\tthis.el.removeAttribute(ATTR_IDLING);\n\n\t\treturn this;\n\t};\n\n\tScrambleText.prototype.stop = function stop() {\n\n\t\tthis._running = false;\n\t\tthis.el.removeAttribute(ATTR_IDLING);\n\t\tthis.el.removeAttribute(ATTR_RUNNING);\n\n\t\treturn this;\n\t};\n\n\treturn ScrambleText;\n}();\n\nfunction anim() {\n\n\tvar elapsedTime = Date.now() - this._startTime;\n\tvar deltaTime = elapsedTime - this._elapsedTime;\n\tvar needsUpdate = 1000 / this.fps <= deltaTime;\n\n\tif (!needsUpdate) {\n\n\t\trequestAnimationFrame(this._anim);\n\t\treturn;\n\t}\n\n\tthis._elapsedTime = elapsedTime;\n\tthis._position = this._idling ? 0 : this._elapsedTime / this.timeOffset | 0;\n\n\tif (!this._running) return;\n\n\tif (this._position >= this._contents.length) {\n\n\t\tthis._running = false;\n\t\tthis.el.innerHTML = this._contents.map(function (el) {\n\t\t\treturn el.content;\n\t\t}).join('');\n\t\tthis.el.removeAttribute('data-scramble-text-running');\n\t\tthis.callback();\n\t\treturn;\n\t}\n\n\trequestAnimationFrame(this._anim);\n\n\tvar textArray = suffle(this._contents, this.chars, this._position);\n\n\tthis.el.innerHTML = textArray.join('');\n}\n\nfunction suffle(contents, chars, position) {\n\n\tvar textArray = [];\n\n\tfor (var i = 0, l = contents.length; i < l; i++) {\n\n\t\tif (contents[i].type === 'tag') {\n\n\t\t\ttextArray.push(contents[i].content);\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (i < position) {\n\n\t\t\ttextArray.push(contents[i].content);\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (/\\s/.test(contents[i].content)) {\n\n\t\t\ttextArray.push(contents[i].content);\n\t\t}\n\n\t\ttextArray.push(getRandCharacter(chars));\n\t}\n\n\treturn textArray;\n}\n\nfunction getRandCharacter(chars) {\n\n\tvar randNum = Math.floor(Math.random() * chars.length);\n\tvar lowChoice = -.5 + Math.random();\n\tvar picketCharacter = chars[randNum];\n\tvar choosen = lowChoice < 0 ? picketCharacter.toLowerCase() : picketCharacter;\n\treturn choosen;\n}\n\nfunction split(string) {\n\n\tvar array = [];\n\tvar tag = /^(\\s*)?<\\/?[a-z](.*?)>(\\s*)?/i;\n\tvar space = /^\\s+/;\n\n\tstring = string.replace(space, '').replace(/\\s+$/, '');\n\n\twhile (string.length !== 0) {\n\n\t\tvar matchTag = string.match(tag);\n\n\t\tif (!!matchTag) {\n\n\t\t\tarray.push({\n\t\t\t\ttype: 'tag',\n\t\t\t\tcontent: matchTag[0].replace(/^(\\s*)(.+)(\\s*)$/, '$1$2$3')\n\t\t\t});\n\t\t\tstring = string.replace(matchTag[0], '');\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar matchSpace = string.match(space);\n\n\t\tif (!!matchSpace) {\n\n\t\t\tarray.push({\n\t\t\t\ttype: 'space',\n\t\t\t\tcontent: ' '\n\t\t\t});\n\t\t\tstring = string.replace(matchSpace[0], '');\n\t\t\tcontinue;\n\t\t}\n\n\t\tarray.push({\n\t\t\ttype: 'character',\n\t\t\tcontent: string[0]\n\t\t});\n\t\tstring = string.slice(1);\n\t}\n\n\treturn array;\n}\n\nexport default ScrambleText;\n"],
  "mappings": "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",
  "names": ["ScrambleText"]
}
